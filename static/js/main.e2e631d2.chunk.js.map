{"version":3,"sources":["components/ImageLoader.js","components/ImageProperties.js","helpers/api.js","components/TransformControl.js","MainApp.js","index.js"],"names":["ImageLoader","props","className","type","value","selectedImageUrl","onChange","onImageLoad","ImageProperties","useState","setLoadedImage","loadedImageHeight","setLoadedImageHeight","loadedImageWidth","setLoadedImageWidth","imgElement","React","useRef","src","ImageURL","ref","onLoad","current","naturalHeight","naturalWidth","instance","axios","create","baseURL","auth","username","process","password","withCredentials","TransformControl","transformImage","setTransformImage","useEffect","API","get","responseType","then","res","image","btoa","Uint8Array","data","reduce","byte","String","fromCharCode","headers","toLowerCase","defaultValue","map","format","quality","gravity","MainApp","imageUrl","setImageUrl","Fragment","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAkBeA,EAbK,SAAAC,GAChB,OACI,qBAAKC,UAAU,cAAf,SACI,+BACI,+CAEA,uBAAOC,KAAK,OAAOC,MAAOH,EAAMI,iBAAkBC,SAAUL,EAAMM,sBCqBnEC,G,MA5BS,SAAAP,GAAU,IAAD,EAESQ,mBAAS,IAFlB,mBAETC,GAFS,aAGqBD,mBAAS,GAH9B,mBAGtBE,EAHsB,KAGHC,EAHG,OAImBH,mBAAS,GAJ5B,mBAItBI,EAJsB,KAIJC,EAJI,KAMvBC,EAAaC,IAAMC,OAAO,MAShC,OACI,sBAAKf,UAAU,SAAf,UACE,qBAAKgB,IAAKjB,EAAMkB,SAAWC,IAAKL,EAAYM,OAT5B,WAClBX,EAAeK,EAAWO,SAC1BV,EAAqBG,EAAWO,QAAQC,eACxCT,EAAoBC,EAAWO,QAAQE,iBAOrC,yCACU,sBAAMtB,UAAU,kBAAhB,SAAmCS,IAD7C,YAGA,wCACS,sBAAMT,UAAU,kBAAhB,SAAmCW,IAD5C,iB,QCNKY,E,OAhBAC,EAAMC,OAAO,CAC1BC,QAAQ,8DACRC,KAAM,CACJC,SAAUC,uBACVC,SAAUD,sDAEZE,iBAAiB,ICqEJC,G,MAzEU,SAAAjC,GAAU,IAAD,EAEcQ,mBAAS,IAFvB,mBAEvB0B,EAFuB,KAEPC,EAFO,KAqB9B,OAbAC,qBAAU,WACNC,EAAIC,IAAI,yBAAyBtC,EAAMkB,SAAU,CAC7CqB,aAAc,gBACfC,MAAK,SAAAC,GACJ,IAAIC,EAAQC,KACR,IAAIC,WAAWH,EAAII,MAChBC,QAAO,SAACD,EAAME,GAAP,OAAgBF,EAAOG,OAAOC,aAAaF,KAAO,KAE1D9B,EAAM,QAAUwB,EAAIS,QAAQ,gBAAgBC,cAAgB,WAAaT,EAC/EP,EAAkBlB,QAEvB,CAACjB,EAAMkB,WAGN,sBAAKjB,UAAU,YAAf,UACI,2CACA,wCAEI,uBAAOmD,aAAa,WAExB,iDAEI,6BAEJ,wCAEI,iCA9BI,CAAC,OAAQ,MAAO,OA+BPC,KAAI,SAAAC,GAAM,OACf,iCACKA,YAKjB,yCAEI,iCAtCM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAuC9CD,KAAI,SAAAE,GAAO,OAClB,iCACKA,YAKjB,sCAEI,uBAAOrD,KAAK,gBAEhB,yCAEI,iCArDM,CAAC,SAAU,QAAS,YAAa,OAAQ,YAAa,QAAS,YAAa,OAAQ,aAsD3EmD,KAAI,SAAAG,GAAO,OAClB,iCACKA,YAKjB,4BACA,qBAAKvC,IAAKiB,WC7CPuB,G,MApBC,SAAAzD,GAAU,IAAD,EAESQ,mBAAS,oCAFlB,mBAEhBkD,EAFgB,KAENC,EAFM,KASvB,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,CAAaxD,iBAAkBsD,EAAUpD,YAPpB,SAAAuD,GAEvBF,EAAYE,EAAMC,OAAO3D,UAMvB,sBAAKF,UAAU,OAAf,UACE,cAAC,EAAD,CAAiBiB,SAAUwC,IAC3B,cAAC,EAAD,CAAkBxC,SAAUwC,YChBpCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e2e631d2.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\n// import API from \"../helpers/api\";\r\n\r\n\r\nconst ImageLoader = props => {\r\n    return (\r\n        <div className=\"imageloader\">\r\n            <form>\r\n                <label>\r\n                Image URL:\r\n                <input type=\"text\" value={props.selectedImageUrl} onChange={props.onImageLoad} />\r\n                </label>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLoader;","import React, { useState, useEffect} from 'react';\r\n\r\nimport \"./ImageProperties.css\"\r\n\r\nconst ImageProperties = props => {\r\n\r\n    const [loadedImage, setLoadedImage] = useState({});\r\n    const [loadedImageHeight, setLoadedImageHeight] = useState(0);  \r\n    const [loadedImageWidth, setLoadedImageWidth] = useState(0);  \r\n\r\n    const imgElement = React.useRef(null);\r\n\r\n    const handleImgLoad = () => {\r\n        setLoadedImage(imgElement.current);\r\n        setLoadedImageHeight(imgElement.current.naturalHeight);\r\n        setLoadedImageWidth(imgElement.current.naturalWidth);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"imgbox\">\r\n          <img src={props.ImageURL}  ref={imgElement} onLoad={handleImgLoad} />\r\n          <p>\r\n            Height: <span className=\"summary__output\">{loadedImageHeight}</span> pixel\r\n          </p>\r\n          <p>\r\n            Width: <span className=\"summary__output\">{loadedImageWidth}</span> pixel\r\n          </p>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ImageProperties;","import axios from 'axios';\r\n\r\n\r\nlet instance = axios.create({\r\n  baseURL: `https://api.staging01.lyrid.io/x/node/express/latest/entry/`,\r\n  auth: {\r\n    username: process.env.REACT_APP_LYRID_EXECUTE_KEY,\r\n    password: process.env.REACT_APP_LYRID_EXECUTE_SECRET\r\n  },\r\n  withCredentials: true\r\n});\r\n\r\n\r\n/*\r\nlet instance = axios.create({\r\n  baseURL: `http://localhost:3000/`\r\n});\r\n*/\r\n\r\nexport default instance;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport API from '../helpers/api'\r\nimport \"./TransformControl.css\";\r\n\r\n\r\nconst TransformControl = props => {\r\n\r\n    const [transformImage, setTransformImage] = useState(\"\");  \r\n    \r\n    const formats = [\"webp\", \"png\", \"jpg\"];\r\n    const gravities = [\"center\", \"north\", \"northeast\", \"east\", \"southeast\", \"south\", \"southwest\", \"west\", \"northwest\"];\r\n    const qualities = [\"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\", \"80\", \"90\", \"100\"];\r\n\r\n    useEffect(() => {\r\n        API.get(`/sharp/resize/200?url=`+props.ImageURL, {\r\n            responseType: 'arraybuffer' \r\n        }).then(res => {\r\n            let image = btoa(\r\n                new Uint8Array(res.data)\r\n                  .reduce((data, byte) => data + String.fromCharCode(byte), '')\r\n              );\r\n            const src = 'data:' + res.headers['content-type'].toLowerCase() + \";base64,\" + image\r\n            setTransformImage(src)\r\n    })\r\n    }, [props.ImageURL]);\r\n\r\n    return (\r\n        <div className=\"transform\">\r\n            <h1>Transform</h1>\r\n            <p>\r\n                Height:\r\n                <input defaultValue=\"200\" />\r\n            </p>\r\n            <p>\r\n                Width(optional):\r\n                <input />\r\n            </p>\r\n            <p>\r\n                Format:\r\n                <select >\r\n                    {formats.map(format => (\r\n                        <option>\r\n                            {format}\r\n                        </option>\r\n                        ))}\r\n                </select>\r\n            </p>\r\n            <p>\r\n                Quality:\r\n                <select >\r\n                    {qualities.map(quality => (\r\n                        <option>\r\n                            {quality}\r\n                        </option>\r\n                        ))}\r\n                </select>\r\n            </p>\r\n            <p>\r\n                Crop?\r\n                <input type=\"checkbox\" />\r\n            </p>\r\n            <p>\r\n                Gravity:\r\n                <select >\r\n                    {gravities.map(gravity => (\r\n                        <option>\r\n                            {gravity}\r\n                        </option>\r\n                        ))}\r\n                </select>\r\n            </p>\r\n            <p>\r\n            <img src={transformImage}></img>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransformControl;","import React, {useState} from 'react';\r\nimport ImageLoader from \"./components/ImageLoader\";\r\nimport ImageProperties from \"./components/ImageProperties\";\r\nimport TransformControl from \"./components/TransformControl\";\r\n\r\nimport \"./MainApp.css\";\r\n\r\nconst MainApp = props => {\r\n\r\n  const [imageUrl, setImageUrl] = useState(\"https://i.imgur.com/3a0qwRe.jpeg\");\r\n\r\n  const imageLoadHandler = event => {\r\n\r\n    setImageUrl(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ImageLoader selectedImageUrl={imageUrl} onImageLoad={imageLoadHandler} />\r\n      <div className='rowC'>\r\n        <ImageProperties ImageURL={imageUrl} />\r\n        <TransformControl ImageURL={imageUrl} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n  \r\nexport default MainApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './MainApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}